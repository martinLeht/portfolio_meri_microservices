version: '3.7'

services:
  naming-server:
    image: 'eureka-naming-server:0.0.1-SNAPSHOT'
    mem_limit: 700m
    ports:
      - "8761:8761"
    networks:
      - blog-platform-network

  api-gateway:
    build: ./api-gateway
    mem_limit: 700m
    ports:
      - "8765:8765"
    networks:
      - blog-platform-network
#    depends_on:
#      - naming-server
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#      EUREKA.CLIENT.FETCHREGISTRY: "true"

  authentication-service:
    build: ./authentication-service
    mem_limit: 700m
    ports:
      - "8083:8083"
    networks:
      - blog-platform-network
    depends_on:
      postgres:
        condition: service_started
    restart: on-failure
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: portfolio_microservices_db
      POSTGRES_USER: testUser
      POSTGRES_PASSWORD: testPass123
#      - naming-server
#    restart: on-failure
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#      EUREKA.CLIENT.FETCHREGISTRY: "true"
    
  storage-service:
    image: 'storage-service:0.0.1-SNAPSHOT'
    mem_limit: 700m
    ports:
      - "8200:8200"
    networks:
      - blog-platform-network
#    depends_on:
#      - naming-server
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#      EUREKA.CLIENT.FETCHREGISTRY: "true"

  blog-service:
    image: 'blog-service:0.0.1-SNAPSHOT'
    build: ./blog-service
    mem_limit: 700m
    ports:
      - "8100:8100"
    networks:
      - blog-platform-network
#    depends_on:
#      - naming-server
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#      EUREKA.CLIENT.FETCHREGISTRY: "true"

  email-service:
    build: ./email-service
    mem_limit: 700m
    ports:
      - "8089:8089"
    networks:
      - blog-platform-network
    depends_on:
      kafka:
        condition: service_started
    environment:
       SENDGRID_API_KEY: <SENDGRID_API_KEY_HERE>
       EMAIL_ADDRESS_FROM: <VERIFIED_EMAIL_ADDRESS_HERE>
       KAFKA_URL: http://kafka:9092
  
  postgres:
    image: postgres:15beta4
    restart: always
    ports:
      - 5432:5432
    networks:
      - blog-platform-network
    environment:
      POSTGRES_DB: portfolio_microservices_db
      POSTGRES_USER: testUser
      POSTGRES_PASSWORD: testPass123

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      DOCKER_API_VERSION: 1.41
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
networks:
  blog-platform-network: