<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
        <groupId>com.saitama.microservices</groupId>
        <artifactId>portfolio-microservices</artifactId>
        <version>1.0.0</version>
    </parent>	
	 
	<artifactId>blog-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>blog-service</name>
	<packaging>jar</packaging>
	<description>Microservice to handle server-side functionality for a blog project</description>
	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>2021.0.4</spring-cloud.version>
		<springdoc-openapi.version>1.6.4</springdoc-openapi.version>
		<repackage.classifier/>
	</properties>
	
	<profiles>
	    <profile>
	        <id>local</id>
	        <properties>
		        <activatedProfile>local</activatedProfile>
		    </properties>
		    <activation>
		        <activeByDefault>true</activeByDefault>
		    </activation>
	        <dependencies>				
				<!-- For discovery through eureka service discovery -->
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				</dependency>
				
				
				<!-- For Zipkin distributed tracing (debugging)
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-sleuth</artifactId>
				</dependency>
				
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-sleuth-zipkin</artifactId>
				</dependency>
				
				<dependency>
					<groupId>org.springframework.amqp</groupId>
					<artifactId>spring-rabbit</artifactId>
				</dependency>
				 -->
	        </dependencies>
	    </profile>
	    <profile>
	        <id>dev</id>
	        <properties>
		        <activatedProfile>dev</activatedProfile>
		    </properties>
	        <dependencies>				
				<!-- For discovery through eureka service discovery -->
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				</dependency>
				
				
				<!-- For Zipkin distributed tracing (debugging)
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-sleuth</artifactId>
				</dependency>
				
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-sleuth-zipkin</artifactId>
				</dependency>
				
				<dependency>
					<groupId>org.springframework.amqp</groupId>
					<artifactId>spring-rabbit</artifactId>
				</dependency>
				 -->
	        </dependencies>
	    </profile>
	    <profile>
	        <id>prod</id>
	        <properties>
		        <activatedProfile>prod</activatedProfile>
		    </properties>
	        <dependencies>
	            <dependency>
		            <groupId>org.springframework.cloud</groupId>
		            <artifactId>spring-cloud-kubernetes-client-discovery</artifactId>
		        </dependency>
	        </dependencies>
	    </profile>
	</profiles>
	
	<dependencies>
        
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>
          
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-ui</artifactId>
		    <version>${springdoc-openapi.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.saitama.microservices</groupId>
			<artifactId>common-lib</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.7.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
	        <resource>
	            <directory>src/main/resources</directory>
	            <filtering>true</filtering>
	        </resource>
	    </resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>                       
					<execution>                    
						<goals>                    
							<goal>repackage</goal> 
						</goals>
						<configuration>
                            <classifier>exec</classifier>
                        </configuration>         
					</execution>                   
				</executions>  
			</plugin>
		</plugins>
	</build>

</project>
